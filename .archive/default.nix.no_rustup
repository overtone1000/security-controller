# default.nix
{ pkgs ? import <nixpkgs> {} }:


pkgs.mkShell {

    nativeBuildInputs = with pkgs; [
        #From nixos.wiki/wiki/Rust
        rustc
        cargo
        gcc
        rustfmt
        clippy
        
        #For avr programming
        pkgsCross.avr.buildPackages.gcc
        pkg-config
        avrdude
        udev

        #Ravedude, a nice rust wrapper for avrdude
        #ravedude

        #Cargo-generate dependencies
        #zlib
        #openssl
    ];

    # Certain Rust tools won't work without this
    # This can also be fixed by using oxalica/rust-overlay and specifying the rust-src extension
    # See https://discourse.nixos.org/t/rust-src-not-found-and-other-misadventures-of-developing-rust-on-nixos/11570/3?u=samuela. for more details.
    RUST_SRC_PATH = "${pkgs.rust.packages.stable.rustPlatform.rustLibSrc}";
    #RUST_SYSROOT = "${pkgs.rust.packages.stable.rustPlatform.rustLibSrc}";

}
#lib/rustlib/src/rust/library/Cargo.lock